Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.0/../../../../avr/lib/avr5/crtm64.o (exit)
/usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
/usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_clear_bss.o)
                              ./LCD/hd44780.o (__do_clear_bss)
/usr/lib/gcc/avr/4.7.0/../../../../avr/lib/avr5/libc.a(fputs.o)
                              ./main.o (fputs)
/usr/lib/gcc/avr/4.7.0/../../../../avr/lib/avr5/libc.a(iob.o)
                              ./main.o (__iob)
/usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_epilogue.o)
                              /usr/lib/gcc/avr/4.7.0/../../../../avr/lib/avr5/libc.a(fputs.o) (__epilogue_restores__)

Allocating common symbols
Common symbol       size              file

__iob               0x6               /usr/lib/gcc/avr/4.7.0/../../../../avr/lib/avr5/libc.a(iob.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.7.0/../../../../avr/lib/avr5/crtm64.o
LOAD ./LCD/hd44780.o
LOAD ./main.o
LOAD /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.0/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x4ae
 *(.vectors)
 .vectors       0x00000000       0x8c /usr/lib/gcc/avr/4.7.0/../../../../avr/lib/avr5/crtm64.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000008c                . = ALIGN (0x2)
                0x0000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000008c        0x0 linker stubs
 *(.trampolines*)
                0x0000008c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000008c                __ctors_start = .
 *(.ctors)
                0x0000008c                __ctors_end = .
                0x0000008c                __dtors_start = .
 *(.dtors)
                0x0000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000008c        0x0 /usr/lib/gcc/avr/4.7.0/../../../../avr/lib/avr5/crtm64.o
                0x0000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000008c        0xc /usr/lib/gcc/avr/4.7.0/../../../../avr/lib/avr5/crtm64.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000098       0x16 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_copy_data.o)
                0x00000098                __do_copy_data
 .init4         0x000000ae       0x10 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_clear_bss.o)
                0x000000ae                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000be        0x8 /usr/lib/gcc/avr/4.7.0/../../../../avr/lib/avr5/crtm64.o
 *(.init9)
 *(.text)
 .text          0x000000c6        0x4 /usr/lib/gcc/avr/4.7.0/../../../../avr/lib/avr5/crtm64.o
                0x000000c6                __vector_22
                0x000000c6                __vector_28
                0x000000c6                __vector_1
                0x000000c6                __vector_32
                0x000000c6                __vector_34
                0x000000c6                __vector_24
                0x000000c6                __vector_12
                0x000000c6                __bad_interrupt
                0x000000c6                __vector_6
                0x000000c6                __vector_31
                0x000000c6                __vector_3
                0x000000c6                __vector_23
                0x000000c6                __vector_30
                0x000000c6                __vector_25
                0x000000c6                __vector_11
                0x000000c6                __vector_13
                0x000000c6                __vector_17
                0x000000c6                __vector_19
                0x000000c6                __vector_7
                0x000000c6                __vector_27
                0x000000c6                __vector_5
                0x000000c6                __vector_33
                0x000000c6                __vector_4
                0x000000c6                __vector_9
                0x000000c6                __vector_2
                0x000000c6                __vector_21
                0x000000c6                __vector_15
                0x000000c6                __vector_29
                0x000000c6                __vector_8
                0x000000c6                __vector_26
                0x000000c6                __vector_14
                0x000000c6                __vector_10
                0x000000c6                __vector_16
                0x000000c6                __vector_18
                0x000000c6                __vector_20
 .text          0x000000ca      0x2f8 ./LCD/hd44780.o
                0x000001d4                lcd_delay_ms
                0x000001e8                lcd_command
                0x000001fa                lcd_gotoxy
                0x00000208                lcd_clrscr
                0x0000020e                lcd_home
                0x00000214                lcd_putc
                0x00000230                lcd_putc_stream
                0x000002aa                rolltext_lcd_p
                0x00000316                lcd_puts
                0x0000032e                lcd_puts_p
                0x0000034a                lcd_init
 .text          0x000003c2        0x0 ./main.o
 .text          0x000003c2        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_exit.o)
 .text          0x000003c2        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_copy_data.o)
 .text          0x000003c2        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_clear_bss.o)
 .text          0x000003c2        0x0 /usr/lib/gcc/avr/4.7.0/../../../../avr/lib/avr5/libc.a(fputs.o)
 .text          0x000003c2        0x0 /usr/lib/gcc/avr/4.7.0/../../../../avr/lib/avr5/libc.a(iob.o)
 .text          0x000003c2        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_epilogue.o)
                0x000003c2                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000003c2       0x60 ./main.o
                0x000003c2                main
 .text.libgcc.mul
                0x00000422        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000422        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000422        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000422        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000422        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000422        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000422        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000422        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000422        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000422        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000422        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000422        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000422        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000422        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000422        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000422        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000422        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000422        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000422       0x52 /usr/lib/gcc/avr/4.7.0/../../../../avr/lib/avr5/libc.a(fputs.o)
                0x00000422                fputs
 .text.libgcc.mul
                0x00000474        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_epilogue.o)
 .text.libgcc.div
                0x00000474        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_epilogue.o)
 .text.libgcc   0x00000474        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_epilogue.o)
 .text.libgcc.prologue
                0x00000474       0x36 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_epilogue.o)
                0x00000474                __epilogue_restores__
 .text.libgcc.builtins
                0x000004aa        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_epilogue.o)
 .text.libgcc.fmul
                0x000004aa        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_epilogue.o)
                0x000004aa                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000004aa        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_exit.o)
                0x000004aa                exit
                0x000004aa                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000004aa        0x4 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x000004ae                _etext = .

.data           0x00800100        0xe load address 0x000004ae
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/../../../../avr/lib/avr5/crtm64.o
 .data          0x00800100        0x0 ./LCD/hd44780.o
 .data          0x00800100        0x0 ./main.o
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_exit.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_copy_data.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_clear_bss.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/../../../../avr/lib/avr5/libc.a(fputs.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/../../../../avr/lib/avr5/libc.a(iob.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_epilogue.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x00800100        0xe ./main.o
 *(.gnu.linkonce.d*)
                0x0080010e                . = ALIGN (0x2)
                0x0080010e                _edata = .
                0x0080010e                PROVIDE (__data_end, .)

.bss            0x0080010e        0x9
                0x0080010e                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080010e        0x0 /usr/lib/gcc/avr/4.7.0/../../../../avr/lib/avr5/crtm64.o
 .bss           0x0080010e        0x3 ./LCD/hd44780.o
 .bss           0x00800111        0x0 ./main.o
 .bss           0x00800111        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_exit.o)
 .bss           0x00800111        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_copy_data.o)
 .bss           0x00800111        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_clear_bss.o)
 .bss           0x00800111        0x0 /usr/lib/gcc/avr/4.7.0/../../../../avr/lib/avr5/libc.a(fputs.o)
 .bss           0x00800111        0x0 /usr/lib/gcc/avr/4.7.0/../../../../avr/lib/avr5/libc.a(iob.o)
 .bss           0x00800111        0x0 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_epilogue.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800111        0x6 /usr/lib/gcc/avr/4.7.0/../../../../avr/lib/avr5/libc.a(iob.o)
                0x00800111                __iob
                0x00800117                PROVIDE (__bss_end, .)
                0x000004ae                __data_load_start = LOADADDR (.data)
                0x000004bc                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800117        0x0
                0x00800117                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800117                PROVIDE (__noinit_end, .)
                0x00800117                _end = .
                0x00800117                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0xf54
 *(.stab)
 .stab          0x00000000      0x6cc /usr/lib/gcc/avr/4.7.0/../../../../avr/lib/avr5/crtm64.o
 .stab          0x000006cc       0x6c /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_exit.o)
                                 0x78 (size before relaxing)
 .stab          0x00000738       0xd8 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_copy_data.o)
                                 0xe4 (size before relaxing)
 .stab          0x00000810       0xb4 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_clear_bss.o)
                                 0xc0 (size before relaxing)
 .stab          0x000008c4      0x3c0 /usr/lib/gcc/avr/4.7.0/../../../../avr/lib/avr5/libc.a(fputs.o)
                                0x3cc (size before relaxing)
 .stab          0x00000c84      0x12c /usr/lib/gcc/avr/4.7.0/../../../../avr/lib/avr5/libc.a(iob.o)
                                0x30c (size before relaxing)
 .stab          0x00000db0      0x1a4 /usr/lib/gcc/avr/4.7.0/avr5/libgcc.a(_epilogue.o)
                                0x1b0 (size before relaxing)

.stabstr        0x00000000      0x8f1
 *(.stabstr)
 .stabstr       0x00000000      0x8f1 /usr/lib/gcc/avr/4.7.0/../../../../avr/lib/avr5/crtm64.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x11
 *(.comment)
 .comment       0x00000000       0x11 ./LCD/hd44780.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 ./main.o
 .comment       0x00000000       0x12 /usr/lib/gcc/avr/4.7.0/../../../../avr/lib/avr5/libc.a(fputs.o)
 .comment       0x00000000       0x12 /usr/lib/gcc/avr/4.7.0/../../../../avr/lib/avr5/libc.a(iob.o)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(tank-lcd.elf elf32-avr)
LOAD linker stubs
